name: Docker GitOps Workflow

on:
  push:
    branches:
      - 'main'
      - 'develop'
  schedule:
    - cron: '0 0 * * *'

env:
  DOCKER_IMAGE_NAME: mathieuawels/openwebui-awels

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code (custom-app)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete contents of 'app' directory
        run: |
            rm -rf app/*
            find app -type f -print0 | while IFS= read -r -d $'\0' file; do
              rm -f "$file"
            done
            find app -type d -empty -print0 | while IFS= read -r -d $'\0' dir; do
              rmdir "$dir"
            done
            
      - name: Copy 'custom-app' to 'app'
        run: cp -r custom-app/. app/

      - name: Checkout OpenWebUI
        uses: actions/checkout@v4
        with:
          repository: open-webui/open-webui
          ref: main
          path: open-webui
          fetch-depth: 0

      - name: Merge OpenWebUI into 'app' (excluding conflicts)
        run: |
          rsync -av --delete \
            --exclude='static/favicon.png' \
            --exclude='static/opensearch.xml' \
            --exclude='src/lib/constants.ts' \
            --exclude='backend/open_webui/static/favicon.ico' \
            --exclude='backend/open_webui/static/favicon.png' \
            --exclude='static/static/*' \
            --exclude='src/lib/components/layout/Sidebar/UserMenu.svelte' \
            --exclude='config.js' \
            --exclude='generate-config.sh' \
            --exclude='Dockerfile' \
            --exclude='src/app.html' \
            --exclude='update_ollama_models.sh' \
            open-webui/ app/

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        working-directory: ./app
        run: npm ci

      - name: Build app with more memory
        working-directory: ./app
        run: NODE_OPTIONS="--max-old-space-size=4096" npm run build --if-present

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r .version app/package.json)
          if [[ -z "$VERSION" || "$VERSION" == "null" ]]; then
            VERSION="dev"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: app
          file: app/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:latest,${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSION }}

  deploy-local:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Pull latest Docker image
        run: docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Stop and remove old container (if exists)
        run: |
          if [ "$(docker ps -q -f name=awels-ui)" ]; then
            docker stop awels-ui && docker rm awels-ui
          elif [ "$(docker ps -aq -f name=awels-ui)" ]; then
            docker rm awels-ui
          fi

      - name: Run new container locally
        run: |
          docker run -d \
            --name awels-ui \
            -p 8080:8080 \
            -e ENABLE_API=true \
            -e OPENAI_API_KEY=dev \
            -e AWELS_HOST=192.168.1.10 \
            ${{ env.DOCKER_IMAGE_NAME }}:latest
